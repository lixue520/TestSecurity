<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.9</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cn.edu.guet</groupId>
    <artifactId>SpringVuePj</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>SpringVuePj</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>17</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--  必须添加否则会发生专挑失败？		-->
        <!--  Thymeleaf的使用非常简单，只需要把我们的html页面放在类路径下的templates下，thymeleaf就可以帮我们自动渲染了。		-->
        <!--   添加模板引擎可以使得在控制器或者添加视图控制器类中实现页面转跳		-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--  添加转跳请求拦截：通过该依赖再到Spring Security中进行安全配置;-->
        <!--  只有在配置中通过认证的用户才可以访问到问候界面-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!--json 相关依赖-->
        <dependency>
            <!--	Json解析类		-->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <!--		fastjson是由alibaba开源的一套json处理器。
            与其他json处理器（如Gson，Jackson等）和其他的Java对象序列化反序列化方式相比，
            有比较明显的性能优势。 主要应用有：java与json的相互序列化	-->
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.49</version>
        </dependency>

        <!--lombok 组件-->
        <!--	Lombok能通过注解的方式，在编译时自动为属性生成构造器、
        getter/setter、equals、hashcode、toString方法。简化javaBean代码	-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.0</version>
        </dependency>


<!--        &lt;!&ndash; Apache工具组件 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>commons-lang</groupId>-->
<!--            <artifactId>commons-lang</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>commons-collections</groupId>-->
<!--            <artifactId>commons-collections</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>commons-beanutils</groupId>-->
<!--            <artifactId>commons-beanutils</artifactId>-->
<!--        </dependency>-->



        <!--json相关依赖-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>


        <!--lombok组件-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
